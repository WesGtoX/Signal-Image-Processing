# -*- coding: utf-8 -*-
"""work01_2021-04-27_03_segmentacao_por_cor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cJf5c_4T9n4i_xkAi3L1fi4sOXNZbCod

# **Processamento de Imagens e Imagens**
Engenharia da Computação - 2021.01

**Wesley de Oliveira Mendes, 828.507**

## Tarefa 03 - Segmentação por Cor
- Objetivo
    - Aplicar técnicas fundamentais de processamento de imagens.

### Download das imagens
"""

!wget 'https://images.unsplash.com/photo-1517814934924-e041dccc258f' -O 'color_wall.jpg'
!wget 'https://images.unsplash.com/photo-1600697047272-220ab8281b0c' -O 'the_forest_lake.jpg'

"""### Imports"""

import cv2 as cv
import numpy as np
import matplotlib.pyplot as plt

"""### Code

#### Exercício 1
Utiliza técnicas de processamento de imagens para:
- Carregar uma imagem digital natural (foto) da sua preferência.
- Segmentar um objeto ou região do seu interesse a partir da cor.
- Apresentar o resultado da segmentação.
"""

# Carregar uma imagem digital natural (foto) da sua preferência.
exe1_img1 = cv.imread('color_wall.jpg')
exe1_img1 = cv.cvtColor(exe1_img1, cv.COLOR_BGR2RGB)

# Segmentar um objeto ou região do seu interesse a partir da cor.
exe1_img1_hsv = cv.cvtColor(exe1_img1, cv.COLOR_RGB2HSV)

# target pixels in the red color range
start_red = np.array([0, 120, 135])
end_red = np.array([20, 255, 255])

# target pixels in the yellow color range
start_yellow = np.array([20, 120, 80])
end_yellow = np.array([60, 255, 255])

# target pixels in the blue color range
start_blue = np.array([89, 120, 115])
end_blue = np.array([125, 255, 255])

# target pixels in the green color range
start_green = np.array([60, 50, 130])
end_green = np.array([80, 255, 255])

exe1_img1_target_red = cv.inRange(exe1_img1_hsv, start_red, end_red)
exe1_img1_target_yellow = cv.inRange(exe1_img1_hsv, start_yellow, end_yellow)
exe1_img1_target_blue = cv.inRange(exe1_img1_hsv, start_blue, end_blue)
exe1_img1_target_green = cv.inRange(exe1_img1_hsv, start_green, end_green)

# Apresentar o resultado da segmentação.
plt.figure(figsize=(16, 8))
plt.subplot(241), plt.imshow(exe1_img1), plt.title('Original')
plt.subplot(242), plt.imshow(exe1_img1_target_red, cmap='binary'), plt.title('Target Object (red)')
plt.subplot(243), plt.imshow(exe1_img1_target_yellow, cmap='binary'), plt.title('Target Object (yellow)')
plt.subplot(244), plt.imshow(exe1_img1_target_blue, cmap='binary'), plt.title('Target Object (blue)')
plt.subplot(245), plt.imshow(exe1_img1_target_green, cmap='binary'), plt.title('Target Object (green)')
plt.show()

"""#### Exercício 2
Utiliza técnicas de processamento de imagens para:
- Carregar uma imagem digital contendo um lago, por exemplo.
- Segmentar a região do lago a partir da cor.
- Apresentar o resultado da segmentação.
"""

# Carregar uma imagem digital contendo um lago, por exemplo.
exe2_img2 = cv.imread('the_forest_lake.jpg')
exe2_img2 = cv.cvtColor(exe2_img2, cv.COLOR_BGR2RGB)

# Segmentar a região do lago a partir da cor.
exe2_img2_hsv = cv.cvtColor(exe2_img2, cv.COLOR_RGB2HSV)

# target pixels in the red color range
start = np.array([80, 100, 100])
end = np.array([100, 255, 255])

exe2_img2_target_lake = cv.inRange(exe2_img2_hsv, start, end)

# Apresentar o resultado da segmentação.
plt.figure(figsize=(18, 10))
plt.subplot(241), plt.imshow(exe2_img2), plt.title('Original')
plt.subplot(242), plt.imshow(exe2_img2_target_lake, cmap='binary'), plt.title('Target Lake')
plt.show()