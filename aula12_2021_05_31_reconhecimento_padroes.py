# -*- coding: utf-8 -*-
"""aula12_2021-05-31_reconhecimento_padroes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BNTp-BtyezssY7xLoNeF41WA95J-DQmm

# **Processamento de Imagens e Imagens**
Engenharia da Computação - 2021.01

## Reconhecimento de Padrões

### Download das imagens de teste
"""



"""### Imports"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report, accuracy_score

"""### Code"""

# carregar o arquivo com as caracteristicas
df = pd.read_csv('drive/MyDrive/Colab Notebooks/College/Signal-Image-Processing/image_dataset_publico/iris_dataset.csv', sep=';')
df.describe()

#separar as caracteristicas e os rótulos
X = df.iloc[:, 0:4]     # caracteristicas 
y = df.iloc[:, 4]       # rotulos
print(y)

# PRE-PROCESSAMENTO
normalizar = StandardScaler()
normalizar.fit(X)
X = normalizar.transform(X)
print(X[:5])

# PROCESSAMENTO
# Dividir o conjunto de dados em treinamento (TRAIN) e teste (TEST)
XTrain, XTest, yTrain, yTest = train_test_split(X, y, test_size=0.30, random_state=35)

# CLASSIFICADOR
knn = KNeighborsClassifier(n_neighbors=5)
knn.fit(XTrain, yTrain)
Y = knn.predict(XTest)

# RESULTADO
acc = accuracy_score(yTest, Y)
print(f'Accuracia {acc:.2f}')

# Matriz confusao
print(pd.crosstab(yTest, Y, rownames=['True'], colnames=['Predicao'], margins=True))

"""### Exercises

#### Imports
"""



"""#### Code"""

