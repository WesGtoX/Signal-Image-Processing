# -*- coding: utf-8 -*-
"""work01_2021-04-27_02_filtragem_digital_salt_pepper.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rMp7S-LC1fSueWqVfh5fd1NLOTXkqikY

# **Processamento de Imagens e Imagens**
Engenharia da Computação - 2021.01

**Wesley de Oliveira Mendes, 828.507**

## Tarefa 02 - Filtragem Digital - Salt e Pepper
- Objetivo
    - Aplicar técnicas fundamentais de processamento de imagens.

### Download das imagens
"""

!wget 'https://homepages.cae.wisc.edu/~ece533/images/lena.png'

"""### Imports"""

import random
import cv2 as cv
import numpy as np
import matplotlib.pyplot as plt

"""### Code

#### Exercício 1
Utiliza técnicas de processamento de imagens para:
- Carregar uma imagem digital.
- Gerar um ruído uniforme Sal e Pimenta (Salt and Pepper) na imagem, você poderá utilizar a metodologia da sua preferência.
- Aplicar a técnica de filtragem gaussiana (GaussianBlur) na imagem ruidosa.
- Aplicar a técnica de filtragem por média (medianBlur) na imagem ruidosa.
- Apresentar os resultados.
"""

# Carregar uma imagem digital.
exe1_img1 = cv.imread('lena.png')
exe1_img1 = cv.cvtColor(exe1_img1, cv.COLOR_BGR2GRAY)

# Gerar um ruído uniforme Sal e Pimenta (Salt and Pepper) na imagem, você poderá utilizar a metodologia da sua preferência.
def apply_salt_pepper(image, color_code):
    row, col = image.shape
    pixels_number = random.randint(300, 10000)

    for i in range(pixels_number):
        y_coord = random.randint(0, row - 1)
        x_coord = random.randint(0, col - 1)
        image[y_coord][x_coord] = color_code
    
    return image


def add_noise(image):
    image = apply_salt_pepper(image=image, color_code=255)
    image = apply_salt_pepper(image=image, color_code=0)
    return image

exe1_img1_salt_pepprer = exe1_img1.copy()
exe1_img1_salt_pepprer = add_noise(exe1_img1_salt_pepprer)

# Aplicar a técnica de filtragem gaussiana (GaussianBlur) na imagem ruidosa.
exe1_img1_gaussian_blur = cv.GaussianBlur(exe1_img1_salt_pepprer, (15, 15), 0)

# Aplicar a técnica de filtragem por média (medianBlur) na imagem ruidosa.
exe1_img1_median_blur = cv.medianBlur(exe1_img1_salt_pepprer, 9)

# Apresentar os resultados.
plt.figure(figsize=(16, 8))
plt.subplot(241), plt.imshow(exe1_img1, cmap='gray'), plt.title('Original')
plt.subplot(242), plt.imshow(exe1_img1_salt_pepprer, cmap='gray'), plt.title('Salt and Pepper')
plt.subplot(243), plt.imshow(exe1_img1_gaussian_blur, cmap='gray'), plt.title('Gaussian Blur')
plt.subplot(244), plt.imshow(exe1_img1_median_blur, cmap='gray'), plt.title('Median Blur')
plt.show()