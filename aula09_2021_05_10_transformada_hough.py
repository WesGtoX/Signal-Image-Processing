# -*- coding: utf-8 -*-
"""aula09_2021-05-10_transformada_hough.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GggwoNz4JFQn3sLLLPDlR6e3MhTikL8N

# **Processamento de Imagens e Imagens**
Engenharia da Computação - 2021.01

## Transformada de Hough

### Download das imagens de teste
"""



"""### Imports"""

import cv2 as cv
import numpy as np
import matplotlib.pyplot as plt

"""### Code"""

img1 = cv.imread('drive/MyDrive/Colab Notebooks/College/Signal-Image-Processing/image_dataset_publico/rodovia.jpg')
img2 = img1.copy()

img2 = cv.cvtColor(img2,cv.COLOR_BGR2GRAY)
img2 = cv.Canny(img2, 500, 200)

# Transformada de Hough
p1 = 100    # linhas menores que 100 pixels serão descartadas
p2 = 50     # gap com no máximo 50 pixels
p3 = 45     # o número mínimo de intersecções para detectar a linha

linhas = cv.HoughLinesP(img2, 1, np.pi / 180, threshold=p3, minLineLength=p1, maxLineGap=p2)

img3 = img1.copy()
if linhas is not None:
    print(f'Qtde linhas encontradas: {len(linhas)}')

    # exibir as linhas
    for linha in linhas:
        x1, y1, x2, y2 = linha[0]
        cv.line(img3,(x1, y1), (x2, y2),(255, 0, 0), 1)
else:
    print('Nenhuma linha encontrada.')


plt.figure(figsize=(15,15))
plt.subplot(131), plt.imshow(img1)
plt.subplot(132), plt.imshow(img2, cmap='gray')
plt.subplot(133), plt.imshow(img3)
plt.show()

img1 = cv.imread('drive/MyDrive/Colab Notebooks/College/Signal-Image-Processing/image_dataset_publico/planet_glow.jpg')
img2 = img1.copy()

img2 = cv.cvtColor(img2,cv.COLOR_BGR2GRAY)
img2 = cv.medianBlur(img2, 5)

# Transformada de Hough
circulos = cv.HoughCircles(img2,cv.HOUGH_GRADIENT, 1, 120, param1 = 200, param2 = 30, minRadius=0, maxRadius=0)
circulos = np.uint16(np.around(circulos))

img3 = img1.copy()
if circulos is not None:
    print(f'Qtde de círculos encontrados: {len(circulos[0, :])}')

    for circulo in circulos[0,:]:
        cv.circle(img3, (circulo[0],circulo[1]),circulo[2],(255,0,0),3)

plt.figure(figsize=(15,15))
plt.subplot(131), plt.imshow(img1)
plt.subplot(132), plt.imshow(img2, cmap='gray')
plt.subplot(133), plt.imshow(img3)
plt.show()

img1 = cv.imread('drive/MyDrive/Colab Notebooks/College/Signal-Image-Processing/image_dataset_publico/olhos_castanhos.jpg')
img1 = cv.cvtColor(img1,cv.COLOR_BGR2RGB)
img2 = img1.copy()

img2 = cv.cvtColor(img2,cv.COLOR_BGR2GRAY)
img2 = cv.medianBlur(img2, 5)

#
# Transformada de Hough
#
circulos = cv.HoughCircles(img2,cv.HOUGH_GRADIENT, 1, 120, param1=200, param2=30, minRadius=0, maxRadius=0)
circulos = np.uint16(np.around(circulos))

img3 = img1.copy()
if circulos is not None:
    print(f'Qtde de círculos encontrados: {len(circulos[0, :])}')

    for circulo in circulos[0,:]:
        cv.circle(img3, (circulo[0],circulo[1]),circulo[2],(255,0,0),3)

plt.figure(figsize=(15,15))
plt.subplot(131), plt.imshow(img1)
plt.subplot(132), plt.imshow(img2, cmap='gray')
plt.subplot(133), plt.imshow(img3)
plt.show()

"""### Exercises

#### Imports
"""



"""#### Code"""

